import flixel.FlxG;
import flixel.FlxSprite;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxColor;
import flixel.util.FlxTimer;
import funkin.Conductor;
import funkin.FunkinMemory;
import funkin.graphics.FunkinSprite;
import funkin.graphics.video.FunkinVideoSprite;
import funkin.input.Cursor;
import funkin.modding.ModStore;
import funkin.Preferences;
import funkin.ui.FullScreenScaleMode;
import funkin.ui.mainmenu.MainMenuState;
import funkin.ui.ScriptedMusicBeatState;
import Main;
import StringTools;

class TBSTitleState extends ScriptedMusicBeatState {
    public static var initialized:Bool = false;
    var transitioning:Bool = false;

    var bg:FunkinSprite;
    var modLogo:FlxSprite;

    var introVid:FunkinVideoSprite;

    public static function setPlayedIntro(value:Bool) { ModStore.stores.set("playedIntro", value); }

    public static function playedIntro():Bool { return ModStore.get("playedIntro"); }

    override function create() {
        super.create();

        if (!playedIntro()) startIntroVid();
        else enterTitle();
    }

    function enterTitle() {
        playMenuMusic();

        bg = FunkinSprite.create(0, 0, "titlescreen/modBanner");
        bg.screenCenter();
        add(bg);

        modLogo = FunkinSprite.create(255 + (FullScreenScaleMode.gameCutoutSize.x * 0.5), 300, "titlescreen/TBSLogoBlank");
        modLogo.scale.set(0.8, 0.8);
        modLogo.scrollFactor.set();
        modLogo.antialiasing = true;
        add(modLogo);

        initialized = true;
    }

    override function update(elapsed:Float) {
        Conductor.instance.update();
        Cursor.hide();

        var pressedEnter:Bool = FlxG.keys.justPressed.ENTER;

        if (initialized && !transitioning && pressedEnter && introVid == null) {
            FlxG.camera.flash(FlxColor.WHITE, 1);
            TBSMain.playSound("confirmMenuTBS", 0.7);
            transitioning = true;

            new FlxTimer().start(1, tmr -> moveToMainMenu());
        }

        if ((controls.ACCEPT || pressedEnter) && introVid != null) {
            FlxTween.tween(Main.debugDisplay, {alpha: Preferences.debugDisplayBGOpacity}, 4, {ease:FlxEase.expoIn});
            setPlayedIntro(true);
            introVid.stop();
            introVid = null;
            enterTitle();
        }
        if (controls.BACK) {
            TBSMain.playSound("cancelMenuTBS");
            TBSCustomFade.switchState(new MainMenuState());
        }

        super.update(elapsed);
    }

    override public function beatHit():Bool {
        if (!super.beatHit()) return false;
        if (initialized) FlxTween.tween(modLogo.scale, {y: 0.9, x: 0.9}, 0.3, {ease: FlxEase.quadOut, type: 16});
        return true;
    }

    function startIntroVid() {
        if (FlxG.sound.music.playing) FlxG.sound.music.stop();

        Main.debugDisplay.alpha = 0;

        introVid = new FunkinVideoSprite();
        introVid.antialiasing = true;
        introVid.bitmap.onFormatSetup.add(() -> {
            if (introVid.bitmap != null && introVid.bitmap.bitmapData != null) {
                introVid.setGraphicSize(
                    introVid.bitmap.bitmapData.width * Math.min(FlxG.width / introVid.bitmap.bitmapData.width, FlxG.height / introVid.bitmap.bitmapData.height),
                    introVid.bitmap.bitmapData.height * Math.min(FlxG.width / introVid.bitmap.bitmapData.width, FlxG.height / introVid.bitmap.bitmapData.height));
                introVid.updateHitbox();
                introVid.screenCenter();
            }
        });
        introVid.bitmap.onEndReached.add(() -> {
            FlxTween.tween(Main.debugDisplay, {alpha: Preferences.debugDisplayBGOpacity}, 4, {ease:FlxEase.expoIn});
            setPlayedIntro(true);
            introVid.destroy();
            introVid = null;
            enterTitle();
        });
        add(introVid);

        introVid.load(Paths.videos("BasementIntro"));
        introVid.play();
    }

    function moveToMainMenu() {
        FunkinMemory.purgeCache();
        TBSCustomFade.switchState(new TBSMainMenu());
    }

    function playMenuMusic() {
        var shouldFadeIn:Bool = !StringTools.contains(FlxG.sound.music._label, "basementMenu");
        TBSMain.playMenuMusic("basementMenu", 0.0);
        if (shouldFadeIn) FlxG.sound.music.fadeIn(4.0, 0.0, 1.0);
    }
}